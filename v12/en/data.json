{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "JSON Input Validation using a JSON Schema in YAML format",
            "shortDescription": "Learn how to validate input JSON messages over HTTP by checking them against a JSON schema in YAML format.",
            "durationText": "This tutorial takes approximately",
            "durationTime": "5 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Knowledge Center",
           		"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.ace.home.doc/help_home.htm"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "JSON validation"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to validate JSON message data in a flow using a JSON schema in YAML format."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial demonstrates a simple message flow that receives a JSON input message over HTTP, and checks the data against a JSON Schema using the HTTP Input node. Three example input messages are provided, one which passes validation and two which will fail validation in different ways. A graphical mapping node transforms the input JSON message into an output XML message which is used to construct a reply message which is returned to the requesting client using an HTTPReply node."
                    },
                    {
                        "section": "The tutorial requires an integration node owned server, or an independent integration server."
                    },
                    {
                        "section": "In IBM App Connect Enterprise, an application is a container for all the resources that are required to create a solution. This tutorial provides an application to hold the message flow. There are no other pre-requisites needed by the scenario."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "Knowledge Center link to ",
						"description": "Developing integration solutions by using applications",
						"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, one project will be created in your workspace: An application named <span class='application'>Validate_Using_Schema_YAML</span>. <span class='application'>Validate_Using_Schema_YAML</span> provides a single message flow named <span class='application'>Validate_Using_Schema_YAML</span> which receives data using an HTTP Input node. This node is configured to expect a JSON message which conforms to the JSON Schema named <span class='resource'>ItemSchema.yaml</span>."
                        },
                        {
                            "section": "The Input Message Parsing settings on the HTTP Input node are as follows:<br><b>Message domain:</b><code>JSON: For JavaScript Object Notation messages</code><br><b>Message model:</b><code>ItemSchema.yaml</code><br><b>Message:</b><code>&lt;blank&gt;</code><br><br>The node is configured to validate immediately when data arrives, and if the data is invalid, to throw an exception (in JSON format). Next the graphical mapping node generates a suitable reply which is returned using the HTTPReply node at the end of the flow."
						},						
                        {
			    			"section": "Once imported, the provided project is ready to be deployed and tested, as described on the Prepare tab."
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Developing integration solutions by using applications",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "Create a local integration server",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": 
		     [
			  {
              "section":"Prepare the scenario by executing the following steps:",				
                "steps":
                {
                "type":"ordered",
                "details":
                  [                    					
					{ 
					                      "details":"From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. Leave all the options with their default values and click Finish. The local Integration Server will be started, using a project in your Toolkit's workspace as the work directory. Click OK to dismiss the Success dialog."
					}					
                  ]
                }
              }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "Use the Flow Exerciser to test out the flow:",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {                                
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Open <span class='resource'>Validate_Using_Schema_YAML.msgflow</span>.",
                                        "substeps":{
                                        "type": "unordered",
                                        "details": 
								        [
                                        {
                                          "details": "Click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (when challenged you do not need to redeploy the flow again)."
                                        },   
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. Three saved messages are provided..."
                                        },																				
                                        {
                                            "details": "The input message <span class='resource'>Valid</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"Bread\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"department\": \"Bakery\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"price\": 0.82,<br>&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\": 2,<br>&nbsp;&nbsp;&nbsp;&nbsp;\"description\": \"The best loaf for nearly no dough\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive an XML reply message like this:<br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br>&lt;out:Item xmlns:out=\"http://www.example.org/OutputXMLSchema\"&gt;<br>&nbsp;&nbsp;&lt;out:Name&gt;Bread&lt;/out:Name&gt;<br>&nbsp;&nbsp;&lt;out:Department&gt;Bakery&lt;/out:Department&gt;<br>&nbsp;&nbsp;&lt;out:TotalCost&gt;1.64&lt;/out:TotalCost&gt;<br>&nbsp;&nbsp;&lt;out:Description&gt;The best loaf for nearly no dough&lt;/out:Description&gt;<br>&lt;/out:Item&gt;</code><br><br>After you close the dialog, the path taken through the messageflow will be highlighted."
										},
										{
                                            "details": "The input message <span class='resource'>Invalid_WrongDataType</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"Bread\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"department\": \"Bakery\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"price\": 0.82,<br>&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\": \"2\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"description\": \"The best loaf for nearly no dough\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive a validation error and the detail will explain what was wrong - that the quantity field was of the wrong data type:<br><br><b>'Property has a type 'string' that is not in the following list: 'integer'.'.  The location of the error in the JSON message is '#/quantity'.  The matching location in the JSON schema is 'ShoppingListAPI.json#/components/schemas/Item/properties/quantity'.</b>"			
										},
										{										
                                            "details": "The input message <span class='resource'>Invalid_MissingField</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"name\": \"Bread\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"department\": \"Bakery\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"price\": 0.82,<br>&nbsp;&nbsp;&nbsp;&nbsp;\"quantity\": \"2\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive a validation error and the detail will explain what was wrong - that the description field was missing:<br><br><b>'Object is missing the following members required by the schema: 'description'.'.  The location of the error in the JSON message is '#'.  The matching location in the JSON schema is 'ShoppingListAPI.json#/components/schemas/Item'.</b>"										
										}
                                        ]
                                        }
                                    }
                                ]
                            }
                        },
			{
			    "section": "This tutorial has shown how to validate input JSON messages over HTTP by checking them against a JSON schema in YAML format."
			}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Validate node",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/ac20803_.htm",
							"type": "web"
                        },
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
